{"version":3,"sources":["components/Login.js","components/TextInput.js","components/ModalForm.js","components/NodeTypes.js","components/Notification.js","components/GraphComponent.js","custom-topology/data.js","components/MessageAlert.js","components/TopoBuilder.js","components/Terminal.js","components/TopoViewer.js","components/TitlePage.js","components/SignUp.js","icons/router.svg","components/ParticleComponent.js","components/App.js","index.js"],"names":["SignUp","setAuthorized","useEffect","document","title","history","useHistory","useState","username","password","loginInput","setLoginInput","style","display","alignItems","width","height","Container","border","padding","Row","className","fontFamily","Col","xs","Form","Group","controlId","Label","Control","data-testid","type","value","onChange","event","target","length","window","alert","Text","Button","variant","onClick","axios","post","then","response","status","push","Error","catch","error","handleLogin","TextInput","name","placeHolder","inputValue","changeHandler","maxLength","InputGroup","borderBottomRightRadius","borderTopRightRadius","justifyContent","FormControl","placeholder","ModalForm","config","fields","showModal","setShowModal","submitHandler","textInputs","map","i","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","console","log","NodeTypes","addNode","setNodeConfig","setShowNodeModal","createSdnTopology","nodeTypes","paddingTop","paddingBottom","borderRadius","temp","property","memory","cache","radius","angle","cpu","icon","faEthernet","faServer","generateButtons","Notification","message","setShow","Toast","onClose","GraphComponent","setNodeOptions","setNodeClicked","setShowOption","topoData","graphConfig","onClickLink","onClickNode","currentZoom","setCurrentZoom","id","data","nodeId","node","preventDefault","x","y","previousZoom","newZoom","Math","floor","color","customData","nodes","links","source","MessageAlert","showAlert","Alert","TopoBuilder","setTopoData","createTopology","file","setFile","filename","setFilename","setVariant","setMessage","setShowAlert","errMsg","setErrMsg","showNodeModel","setShowNodeModel","nodeConfig","setNodesNum","random","nodeCordinates","setNodeCordinates","count","setCount","showLoading","setShowLoading","onSubmit","e","a","formData","FormData","append","headers","res","fileName","filePath","msg","setTimeout","customTopoData","setShowTopologyNotification","handleNodeInputChange","valid","dp","filter","tp","test","indexOf","nodeModalFields","link","setLink","setLinkToast","setShowNotification","nodeClicked","showOption","showInstructions","setShowInstructions","showNotification","duration","linkToast","buildInstructions","instruction","index","nodeOptions","showTopologyNotification","ProgressBar","animated","now","minHeight","backgroundColor","faHome","multiplier","nodeType","concat","sdn","marginTop","alignContent","star","createStarTopology","bus","createBusTopology","ring","createRingTopology","flexGrow","borderRight","marginRight","marginLeft","position","top","right","files","TerminalComp","onClickCmd","LineType","Output","lineData","setLineData","onInput","input","ld","Input","toLocaleLowerCase","output","colorMode","ColorMode","Dark","terminalInput","TopoViewer","setOutput","showTerminal","setShowTerminal","structure","showTable","setShowTable","cmd","output_received","command","result","nodeID","toString","margin","class","block","get","Terminal","as","rows","disabled","TitlePage","to","textDecoration","user","setUser","handleSignUp","format","numbers","newUser","ParticleComponent","left","params","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","image","src","opacity","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","repulse","particles_nb","remove","retina_detect","config_demo","background_color","App","setData","myConfig","nodeHighlightBehavior","innerWidth","fontSize","highlightFontSize","highlightStrokeColor","svg","Router","highlightColor","authorized","overflowY","path","Login","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a743d52a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Button, Row, Form, Col } from \"react-bootstrap\";\n\nconst SignUp = ({ setAuthorized }) => {\n  // changes <title> of the tab with respect to the page/components\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  const history = useHistory();\n\n  // Control the state of input fields\n  const [loginInput, setLoginInput] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  // HANDLE LOGIN\n  // Send the login details to nodejs server if login is verified go to build topology otherwise show error\n  const handleLogin = (history) => {\n    axios\n      .post(\"http://localhost:3001/persons\", loginInput)\n      .then((response) => {\n        if (response.status === 200) {\n          setAuthorized(true);\n          history.push(\"/build\");\n        } else if (response.status === 204) {\n          throw Error(\"User name or Password incorrect!\");\n        }\n      })\n      .catch((error) => {\n        window.alert(error);\n      });\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <Container>\n        <div style={{ border: \"2px solid black\", padding: \"5px\" }}>\n          <Row className=\"justify-content-center\">\n            <h1 style={{ fontFamily: \"Roboto\" }}>Login</h1>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col xs=\"auto\">\n              <Form className=\"justify-content-center\">\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    data-testid=\"login-form-username\"\n                    type=\"text\"\n                    value={loginInput.username}\n                    onChange={(event) => {\n                      if (event.target.value.length <= 10) {\n                        setLoginInput({\n                          username: event.target.value,\n                          password: loginInput.password,\n                        });\n                      } else {\n                        window.alert(\n                          \"Username cannot be longer than 10 characters!\"\n                        );\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Never share your username or password with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    data-testid=\"login-form-password\"\n                    type=\"password\"\n                    value={loginInput.password}\n                    onChange={(event) => {\n                      if (event.target.value.length <= 10) {\n                        setLoginInput({\n                          username: loginInput.username,\n                          password: event.target.value,\n                        });\n                      } else {\n                        window.alert(\n                          \"Password cannot be longer than 10 characters!\"\n                        );\n                      }\n                    }}\n                  />\n                </Form.Group>\n                <div className=\"text-center\">\n                  <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                      handleLogin(history);\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\n\nconst TextInput = ({ name, title, placeHolder, inputValue, changeHandler, maxLength}) => {\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Text\n        style={{\n          borderBottomRightRadius: \"0\",\n          borderTopRightRadius: \"0\",\n          width: \"80px\",\n          justifyContent: \"center\",\n        }}\n      >\n        {title}\n      </InputGroup.Text>\n      <FormControl\n        name={name}\n        placeholder={placeHolder}\n        value={inputValue}\n        onChange={changeHandler}\n        maxLength={maxLength}\n      />\n    </InputGroup>\n  );\n};\n\nexport default TextInput;\n","import { React, useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport TextInput from \"./TextInput\";\n\nconst ModalForm = ({\n  title,\n  config,\n  fields,\n  showModal,\n  setShowModal,\n  submitHandler,\n}) => {\n  const tempConfig = config;\n  const textInputs = fields.map((value, i) => {\n    return (\n      <TextInput\n        key={i}\n        name={value.name}\n        title={value.title}\n        placeHolder={value.placeHolder}\n        inputValue={value.inputValue}\n        changeHandler={value.changeHandler}\n        maxLength={value.maxLength}\n      ></TextInput>\n    );\n  });\n  return (\n    <Modal\n      show={showModal}\n      onHide={() => setShowModal(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{textInputs}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n          Close\n        </Button>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            submitHandler();\n            console.log(config);\n            setShowModal(false);\n          }}\n        >\n          {title}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalForm;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { faEthernet, faServer } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst NodeTypes = ({\n  addNode,\n  setNodeConfig,\n  setShowNodeModal,\n  createSdnTopology,\n}) => {\n  const nodeTypes = {\n    \"SDN Controller\": 5,\n    \"Simple Node\": 1,\n    \"Intermediate Node\": 2,\n    \"Advanced Node\": 4,\n    \"Custom Node\": 1,\n  };\n  const generateButtons = () => {\n    const temp = [];\n    for (const property in nodeTypes) {\n      temp.push(\n        <div key={property} className=\"text-center\">\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              if (property === \"Custom Node\") {\n                setNodeConfig({\n                  memory: \"\",\n                  cache: \"\",\n                  radius: \"\",\n                  angle: \"\",\n                  cpu: \"\",\n                });\n                setShowNodeModal(true);\n              } else {\n                if (property === \"SDN Controller\") {\n                  // create a ready made sdn topology\n                  createSdnTopology();\n                } else {\n                  addNode(nodeTypes[property], property);\n                }\n              }\n            }}\n          >\n            <FontAwesomeIcon\n              icon={property == \"SDN Controller\" ? faEthernet : faServer}\n            />\n          </Button>{\" \"}\n          <br />\n          {property}\n        </div>\n      );\n    }\n    return temp;\n  };\n  return (\n    <div\n      style={{\n        border: \"2px solid white\",\n        paddingTop: \"15px\",\n        paddingBottom: \"5px\",\n        justifyContent: \"space-around\",\n        borderRadius: \"0px 0px 5px 5px\",\n      }}\n      className=\"d-flex\"\n    >\n      {generateButtons()}\n    </div>\n  );\n};\n\nexport default NodeTypes;\n","import { React, useState } from \"react\";\nimport { Toast } from \"react-bootstrap\";\n\nconst Notification = ({ title, message, show, setShow }) => {\n  return (\n    <div>\n      <Toast show={show} onClose={() => setShow(false)}>\n        <Toast.Header>\n          <strong className=\"me-auto block\">{title}</strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-left text-white bg-dark\">\n          {message}\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport { Graph } from \"react-d3-graph\";\n\nexport const GraphComponent = ({\n  setNodeOptions,\n  setNodeClicked,\n  setShowOption,\n  topoData,\n  graphConfig,\n  onClickLink,\n  onClickNode,\n}) => {\n  const [currentZoom, setCurrentZoom] = useState(100);\n\n  const onDoubleClickNode = function (nodeId, node) {\n    setNodeOptions(true);\n    setNodeClicked(nodeId);\n  };\n\n  const onRightClickNode = (event, nodeId) => {\n    event.preventDefault();\n    setShowOption(true);\n    setNodeClicked(nodeId);\n  };\n\n  const onNodePositionChange = function (nodeId, x, y) {\n    console.log(`Node ${nodeId} moved to new position x= ${x} y= ${y}`);\n  };\n\n  const onZoomChange = function (previousZoom, newZoom) {\n    console.log(`Zoomed : ${previousZoom}, ${newZoom}`);\n    setCurrentZoom(Math.floor(newZoom * 100));\n  };\n\n  // const onClickNode = (nodeId, node) => {\n  //   console.log(nodeId);\n  // };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Graph\n        id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        data={topoData}\n        onClickNode={onClickNode}\n        config={graphConfig}\n        onClickNode={onClickNode}\n        onDoubleClickNode={onDoubleClickNode}\n        onRightClickNode={onRightClickNode}\n        onClickLink={onClickLink}\n        onNodePositionChange={onNodePositionChange}\n        onZoomChange={onZoomChange}\n      />\n\n      <h5 style={{ color: \"black\" }}>Current Zoom: {currentZoom}%</h5>\n    </div>\n  );\n};\n","const customData = [{nodes: [{id: \"node1\", x: 112, y: 172},\n {id: \"node2\", x: 145, y: 292},\n {id: \"node3\", x: 328, y: 296},\n {id: \"node4\", x: 374, y: 117},\n {id: \"node5\", x: 105, y: 179}\n],links: [{source: \"node1\", target: \"node2\"},\n {source: \"node2\", target: \"node3\"},\n {source: \"node3\", target: \"node4\"},\n {source: \"node5\", target: \"node1\"}\n]}];\nexport default customData;","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nexport const MessageAlert = ({ message, variant, showAlert }) => {\n  if (showAlert) {\n    return (\n      <Alert className=\"text-center\" variant={variant}>\n        {message + \". \"}\n      </Alert>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default MessageAlert;\n","import ModalForm from \"./ModalForm\";\nimport NodeTypes from \"./NodeTypes\";\nimport { React, useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Button,\n  Container,\n  Toast,\n  Form,\n  Modal,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Notification from \"./Notification\";\nimport { useHistory } from \"react-router-dom\";\nimport { GraphComponent } from \"./GraphComponent\";\nimport axios from \"axios\";\nimport customTopoData from \"../custom-topology/data.js\";\nimport MessageAlert from \"./MessageAlert\";\n\nconst TopoBuilder = ({\n  topoData,\n  setTopoData,\n  graphConfig,\n  createTopology,\n}) => {\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [variant, setVariant] = useState(\"success\");\n  const [message, setMessage] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(false);\n  const [errMsg, setErrMsg] = useState(\" \");\n\n  // changes <title> of the tab with respect to the page/components\n  useEffect(() => {\n    document.title = \"Topology Builder\";\n  }, [message]);\n\n  const history = useHistory();\n  const [showNodeModel, setShowNodeModel] = useState(false);\n  const [nodeConfig, setNodeConfig] = useState({\n    memory: \"\",\n    cache: \"\",\n    radius: \"\",\n    angle: \"\",\n    cpu: \"\",\n    name: \"\",\n  });\n  const [nodesNum, setNodesNum] = useState(topoData.nodes.length + 2);\n\n  const [nodeCordinates, setNodeCordinates] = useState({\n    x: Math.random() * 200,\n    y: Math.random() * 200,\n  });\n\n  /************************************************************************/\n  /************************************************************************/\n  // SHOW LOADING SCREEN AND UPLOAD TOPOLOGY STATES AND METHODS\n\n  const [count, setCount] = useState(0);\n  const [showLoading, setShowLoading] = useState(false);\n  const loadingOverlay = () => {\n    return (\n      <Modal\n        show={showLoading}\n        onHide={() => setShowLoading(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Body>Performing operation, please wait awhile...</Modal.Body>\n        <ProgressBar animated now={100} />\n        <Modal.Footer></Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    console.log(file);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setShowLoading(true);\n    // appending the file selected using input\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setVariant(\"success\");\n    try {\n      // posting data to endpoint /upload\n      const res = await axios.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          \"Access-Control-Allow-Origin\": \"true\",\n        },\n      });\n\n      // server responding with filename and filepath\n      const { fileName, filePath } = res.data;\n      console.log(fileName, filename);\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      setVariant(\"danger\");\n\n      // there was an error\n      console.log(err);\n      if (err.response.status === 500) {\n        console.log(\"There was a problem with the server\");\n        setMessage(err.response.data.msg);\n      } else {\n        setMessage(err.response.data.msg);\n        console.log(err.response.data.msg);\n      }\n    }\n    setTimeout(() => {\n      // console.log(customTopoData[0].nodes);\n      // setTopoData({\n      //   nodes: customTopoData[0].nodes,\n      //   links: customTopoData[0].links,\n      // });\n      // setNodesNum(topoData.nodes.length + 2);\n      // // SHOW ALERT\n      // setShowAlert(true);\n      // setTimeout(() => {\n      //   setShowAlert(false);\n      // }, 3000);\n      // setShowTopologyNotification(false);\n      setShowLoading(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setCount(1);\n  }, []);\n\n  useEffect(() => {\n    if (count > 0) {\n      console.log(customTopoData[0].nodes);\n      setTopoData({\n        nodes: customTopoData[0].nodes,\n        links: customTopoData[0].links,\n      });\n      setNodesNum(topoData.nodes.length + 2);\n      // SHOW ALERT\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 3000);\n      setShowTopologyNotification(false);\n      setShowLoading(false);\n    }\n  }, [customTopoData]);\n  /************************************************************************/\n  /************************************************************************/\n\n  // add node different from custom node\n  const addNode = (multiplier, nodeType) => {\n    console.log(nodeType);\n    if (nodeType !== \"Custom Node\") {\n      setNodeConfig({\n        memory: 1024 * multiplier,\n        cache: 512 * multiplier,\n        angle: 0.0,\n        radius: 0.0,\n        cpu: 10 * multiplier,\n      });\n    }\n\n    setNodesNum(topoData.nodes.length + 2);\n    const nodes = topoData.nodes.concat({\n      id: `node${topoData.nodes.length + 1}`,\n      x: nodeCordinates.x,\n      y: nodeCordinates.y,\n      memory: nodeConfig.memory,\n      radius: nodeConfig.radius,\n      cache: nodeConfig.cache,\n      angle: nodeConfig.angle,\n      cpu: nodeConfig.cpu / 100,\n    });\n    setTopoData({ nodes: nodes, links: topoData.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  // add a custom topology\n  const addCustomNode = (multiplier, nodeType) => {\n    const nodes = topoData.nodes.concat({\n      id: nodeConfig.name,\n      x: nodeCordinates.x,\n      y: nodeCordinates.y,\n      memory: nodeConfig.memory,\n      radius: nodeConfig.radius,\n      cache: nodeConfig.cache,\n      angle: nodeConfig.angle,\n      cpu: nodeConfig.cpu / 100,\n    });\n    setTopoData({ nodes: nodes, links: topoData.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  // create a sdn topology\n  const createSdnTopology = () => {\n    const sdn = {\n      nodes: [\n        { id: \"node1\", x: 358, y: 190 },\n        { id: \"node2\", x: 314, y: 346 },\n        { id: \"node3\", x: 397, y: 493 },\n        { id: \"node4\", x: 178, y: 304 },\n        { id: \"s\", x: 211, y: 449 },\n      ],\n      links: [\n        { source: \"s\", target: \"node1\" },\n        { source: \"s\", target: \"node2\" },\n        { source: \"s\", target: \"node3\" },\n        { source: \"s\", target: \"node4\" },\n      ],\n    };\n    setTopoData({ nodes: sdn.nodes, links: sdn.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  // create bus topology\n  const createBusTopology = () => {\n    const bus = {\n      nodes: [\n        { id: \"node1\", x: 133, y: 192 },\n        { id: \"node2\", x: 224, y: 131 },\n        { id: \"node3\", x: 478, y: 359 },\n        { id: \"node4\", x: 323, y: 463 },\n        { id: \"node5\", x: 151, y: 104 },\n      ],\n      links: [\n        { source: \"node1\", target: \"node2\" },\n        { source: \"node2\", target: \"node3\" },\n        { source: \"node3\", target: \"node4\" },\n        { source: \"node4\", target: \"node5\" },\n      ],\n    };\n\n    setTopoData({ nodes: bus.nodes, links: bus.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  // create a star topology\n  const createStarTopology = () => {\n    const star = {\n      nodes: [\n        { id: \"node1\", x: 358, y: 190 },\n        { id: \"node2\", x: 314, y: 346 },\n        { id: \"node3\", x: 397, y: 493 },\n        { id: \"node4\", x: 178, y: 304 },\n        { id: \"node5\", x: 211, y: 449 },\n      ],\n      links: [\n        { source: \"node5\", target: \"node1\" },\n        { source: \"node5\", target: \"node2\" },\n        { source: \"node5\", target: \"node3\" },\n        { source: \"node5\", target: \"node4\" },\n      ],\n    };\n\n    setTopoData({ nodes: star.nodes, links: star.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  // create a ring topology\n  const createRingTopology = () => {\n    const ring = {\n      nodes: [\n        { id: \"node3\", x: 163, y: 341 },\n        { id: \"node4\", x: 924, y: 363 },\n        { id: \"node2\", x: 207, y: 125 },\n        { id: \"node1\", x: 893, y: 105 },\n      ],\n      links: [\n        { source: \"node1\", target: \"node4\" },\n        { source: \"node1\", target: \"node2\" },\n        { source: \"node2\", target: \"node1\" },\n        { source: \"node2\", target: \"node3\" },\n        { source: \"node3\", target: \"node4\" },\n        { source: \"node3\", target: \"node2\" },\n        { source: \"node4\", target: \"node1\" },\n        { source: \"node4\", target: \"node3\" },\n      ],\n    };\n\n    setTopoData({ nodes: ring.nodes, links: ring.links });\n    setNodeCordinates({ x: Math.random() * 200, y: Math.random() * 200 });\n  };\n\n  const handleNodeInputChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    var valid = false;\n    switch (name) {\n      case \"memory\":\n        valid = value > 0 && value <= 1024 * 1024 ? true : false;\n        if (!valid) {\n          setErrMsg(() => \"\");\n        }\n        break;\n      case \"radius\":\n        valid = value >= 0 && value <= 1.0 ? true : false;\n        if (!valid) {\n          setErrMsg(() => \"\");\n        }\n        break;\n      case \"cache\":\n        valid = value > 0 && value <= 1024 * 100 ? true : false;\n        if (!valid) {\n          setErrMsg(() => \"\");\n        }\n        break;\n      case \"angle\":\n        valid = value >= 0 && value <= 360 ? true : false;\n        if (!valid) {\n          setErrMsg(() => \"\");\n        }\n        break;\n      case \"cpu\":\n        valid = value > 0 && value <= 100 ? true : false;\n        if (!valid) {\n          setErrMsg(() => \"\");\n        }\n        break;\n      case \"name\":\n        let format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n        let numbers = /^[0-9]/;\n        // check for duplicates\n        const dp = topoData.nodes.filter((tp) => tp.id == value);\n        console.log(dp);\n        if (dp.length == 0) {\n          valid = true;\n        } else {\n          // duplicate(s) were found\n          console.log(dp.length);\n          setErrMsg(() => \"Node with that name already exists\");\n        }\n        if (format.test(value) || numbers.test(value)) {\n          valid = false;\n          setErrMsg(() => \"Invalid node name\");\n        }\n\n        // check for spaces\n        if (value.indexOf(\" \") >= 0) {\n          setErrMsg(() => \"Node name cannot contain spaces\");\n          console.log(\"Contain Spaces\");\n          valid = false;\n        }\n\n        break;\n      default:\n        break;\n    }\n    if (!valid) {\n      window.alert(\n        `Invalid ${name} value, please enter correct value.\\n${errMsg}`\n      );\n      setNodeConfig({\n        ...nodeConfig,\n        [name]: \"\",\n      });\n    } else {\n      setNodeConfig({\n        ...nodeConfig,\n        [event.target.name]: event.target.value,\n      });\n    }\n  };\n\n  console.log();\n  const nodeModalFields = [\n    {\n      name: \"name\",\n      title: \"Name\",\n      placeHolder: \"Enter Custom Node Name\",\n      inputValue: nodeConfig.name,\n      changeHandler: handleNodeInputChange,\n      maxLength: 10,\n    },\n    {\n      name: \"memory\",\n      title: \"Memory\",\n      placeHolder: \"in KB's\",\n      inputValue: nodeConfig.memory,\n      changeHandler: handleNodeInputChange,\n    },\n    {\n      name: \"cache\",\n      title: \"Cache\",\n      placeHolder: \"in KB's\",\n      inputValue: nodeConfig.cache,\n      changeHandler: handleNodeInputChange,\n    },\n    {\n      name: \"radius\",\n      title: \"Radius\",\n      placeHolder: \"<0.0-1.0>\",\n      inputValue: nodeConfig.radius,\n      changeHandler: handleNodeInputChange,\n    },\n    {\n      name: \"angle\",\n      title: \"Angle\",\n      placeHolder: \"<0-360>\",\n      inputValue: nodeConfig.angle,\n      changeHandler: handleNodeInputChange,\n    },\n    {\n      name: \"cpu\",\n      title: \"CPU\",\n      placeHolder: \"<0-100%>\",\n      inputValue: nodeConfig.cpu,\n      changeHandler: handleNodeInputChange,\n    },\n  ];\n\n  {\n    /************************************************************************/\n  }\n  {\n    /* CONFIGURATION TO ADD LINK */\n  }\n  const [link, setLink] = useState({ source: \"\", target: \"\" });\n  useEffect(() => {\n    if (link.source === \"\" && link.target !== \"\") {\n      setLinkToast({\n        message: \"Set Source Node\",\n      });\n      setShowNotification(true);\n    } else if (link.target === \"\" && link.source !== \"\") {\n      setLinkToast({\n        message: \"Set Target Node\",\n      });\n      setShowNotification(true);\n    } else if (\n      link.source === link.target &&\n      link.source !== \"\" &&\n      link.target !== \"\"\n    ) {\n      setLinkToast({\n        message: \"Source and Target Node cannot be same\",\n      });\n      setShowNotification(true);\n    } else if (\n      link.source !== \"\" &&\n      link.target !== \"\" &&\n      link.source !== link.target\n    ) {\n      setLinkToast({\n        message: \"Adding Link\",\n      });\n      var temp = topoData.links;\n      temp.push(link);\n      setTopoData({\n        ...topoData,\n        links: temp,\n      });\n      setLink({\n        source: \"\",\n        target: \"\",\n      });\n      setShowNotification(false);\n    }\n  }, [link]);\n  const [nodeClicked, setNodeClicked] = useState(\"\");\n  const [showOption, setShowOption] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [showNotification, setShowNotification] = useState(false);\n  const [linkToast, setLinkToast] = useState({\n    duration: 0,\n    message: \"\",\n  });\n\n  const addSource = () => {\n    setLink({\n      ...link,\n      source: nodeClicked,\n    });\n    setShowOption(false);\n  };\n\n  const addDestination = () => {\n    setLink({\n      ...link,\n      target: nodeClicked,\n    });\n    setShowOption(false);\n  };\n  {\n    /************************************************************************/\n  }\n  {\n    // INSTRUCTIONS\n  }\n  const instructions = [\n    \"(1) Right click on node to add Link.\",\n    \"(2) Double Click on Node to delete it.\",\n    \"(3) Zoom in & out using mouse scroll.\",\n    \"(4) Left Click for node properties.\",\n  ];\n  const buildInstructions = instructions.map((instruction, index) => {\n    return <p key={index}>{instruction}</p>;\n  });\n  {\n    /************************************************************************/\n  }\n  {\n    // DELETING NODES\n  }\n  const [nodeOptions, setNodeOptions] = useState(false);\n\n  const deleteNode = () => {\n    //   //also need to remove the links too\n    //   var tempLinks = topoData.links;\n    //   tempLinks = tempLinks.filter(\n    //     (link) => link.source !== nodeClicked || link.target !== nodeClicked\n    //   );\n    //   var temp = topoData.nodes;\n    //   temp = temp.filter((node) => node.id !== nodeClicked);\n    //   setTopoData({\n    //     links: tempLinks,\n    //     nodes: temp,\n    //   });\n    var links = topoData.links;\n    var nodes = topoData.nodes;\n\n    links = links.filter(\n      (link) => link.source !== nodeClicked && link.target !== nodeClicked\n    );\n    nodes = nodes.filter((node) => node.id !== nodeClicked);\n\n    setTopoData({\n      nodes: nodes,\n      links: links,\n    });\n\n    setNodeOptions(false);\n    console.log(\"Deleted Node!\");\n  };\n\n  {\n    /************************************************************************/\n  }\n  // UPLOADING TOPOLOGY STATES\n  const [showTopologyNotification, setShowTopologyNotification] =\n    useState(false);\n  {\n    /************************************************************************/\n  }\n  return (\n    <>\n      {loadingOverlay()}\n      <MessageAlert message={message} variant={variant} showAlert={showAlert} />\n      <Container\n        className=\"text-center\"\n        style={{ minHeight: \"100vh\", backgroundColor: \"black\" }}\n      >\n        {/************************************************************************/}\n        {/* MAIN HEADING */}\n        <h1 style={{ fontFamily: \"Roboto\" }}>\n          <span>\n            <FontAwesomeIcon icon={faHome}></FontAwesomeIcon>{\" \"}\n          </span>\n          Build Topology\n        </h1>\n        {/************************************************************************/}\n        {/************************************************************************/}\n        {/* GRAPH COMPONENT */}\n        <Row>\n          <Col style={{ backgroundColor: \"white\" }}>\n            <GraphComponent\n              setNodeOptions={setNodeOptions}\n              setNodeClicked={setNodeClicked}\n              topoData={topoData}\n              graphConfig={graphConfig}\n              setShowOption={setShowOption}\n              onClickNode={(nodeId, node) => {\n                console.log(nodeId, node);\n                const message = `Node Configurations: \\n \n                CPU: ${node.cpu ? node.cpu * 100 + \"%\" : \"20%\"}\\n\n                Memory: ${node.memory ? node.memory + \"Kb\" : \"1024Kb\"}\\n\n                Cache: ${node.cache ? node.cache + \"Kb\" : \"512Kb\"}\\n\n                Radius: ${node.radius ? node.radius : \"0.1\"}\\n\n                Angle: ${node.angle ? node.angle + \"degree\" : \"0 degree\"}\\n`;\n                setLinkToast({ message });\n                setShowNotification(true);\n              }}\n            />\n          </Col>\n        </Row>\n        {/************************************************************************/}\n        {/************************************************************************/}\n        {/* GENERATE BUTTONS */}\n        <Row>\n          <Col style={{ padding: \"0px\" }}>\n            <NodeTypes\n              addNode={addNode}\n              setNodeConfig={setNodeConfig}\n              setShowNodeModal={setShowNodeModel}\n              createSdnTopology={createSdnTopology}\n            ></NodeTypes>\n          </Col>\n        </Row>\n        {/************************************************************************/}\n        {/************************************************************************/}\n        {/* prebuild topologies */}\n        <Row\n          style={{ marginTop: \"30px\", display: \"flex\", alignContent: \"center\" }}\n        >\n          <Col>\n            <Button\n              variant=\"light\"\n              className=\"btn-lg btn-block\"\n              onClick={() => createStarTopology(history)}\n            >\n              Star Topology\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"light\"\n              className=\"btn-lg btn-block\"\n              onClick={() => createBusTopology(history)}\n            >\n              Bus Topology\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"light\"\n              className=\"btn-lg btn-block\"\n              onClick={() => createRingTopology()}\n            >\n              Ring Topology\n            </Button>\n          </Col>\n          <Col\n            style={{\n              flexGrow: \"1.5\",\n              borderRight: \"3px solid white\",\n              marginRight: \"30px\",\n              marginLeft: \"-30px\",\n            }}\n          >\n            <Button\n              variant=\"light\"\n              className=\"btn-lg\"\n              onClick={() => setShowTopologyNotification(true)}\n            >\n              Upload Topology\n            </Button>\n          </Col>\n\n          {/************************************************************************/}\n          {/************************************************************************/}\n          {/* Buttons */}\n\n          <Col>\n            <Button\n              variant=\"secondary\"\n              className=\"btn-lg btn-block\"\n              onClick={() => setShowInstructions(true)}\n            >\n              Instructions\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"btn-lg btn-block\"\n              onClick={() => createTopology(history)}\n            >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n        {/************************************************************************/}\n        {/************************************************************************/}\n        {/* NODE MODAL */}\n        <ModalForm\n          title=\"Add Node\"\n          config={nodeConfig}\n          fields={nodeModalFields}\n          showModal={showNodeModel}\n          setShowModal={setShowNodeModel}\n          submitHandler={addCustomNode}\n        />\n        {/************************************************************************/}\n        {/************************************************************************/}\n        {/* INSTRUCTIONS */}\n        <div style={{ position: \"fixed\", top: \"0px\", right: \"14px\" }}>\n          <Notification\n            title=\"Instructions\"\n            show={showInstructions}\n            setShow={setShowInstructions}\n            message={buildInstructions}\n          />\n          {/************************************************************************/}\n          {/************************************************************************/}\n          {/* NOTIFICATION */}\n          <Notification\n            title=\"Notification\"\n            show={showNotification}\n            setShow={setShowNotification}\n            message={linkToast.message}\n          />\n          {/************************************************************************/}\n          {/************************************************************************/}\n          {/* ADD LINK */}\n          <Toast show={showOption} onClose={() => setShowOption(false)}>\n            <Toast.Header>\n              <strong className=\"me-auto block\">Link Options</strong>\n            </Toast.Header>\n            <Toast.Body className=\"text-left text-white bg-dark\">\n              Select the node as link source or destination\n              <hr></hr>\n              <div\n                className=\"d-flex\"\n                style={{ justifyContent: \"space-around\" }}\n              >\n                <Button variant=\"secondary\" onClick={addSource}>\n                  Source\n                </Button>\n                <Button variant=\"secondary\" onClick={addDestination}>\n                  Destination\n                </Button>\n              </div>\n            </Toast.Body>\n          </Toast>\n          {/************************************************************************/}\n          {/************************************************************************/}\n          {/* DELETE NODE */}\n          <Toast show={nodeOptions} onClose={() => setNodeOptions(false)}>\n            <Toast.Header>\n              <strong className=\"me-auto block\">Node Options</strong>\n            </Toast.Header>\n            <Toast.Body className=\"text-left text-white bg-dark\">\n              <div\n                className=\"d-flex\"\n                style={{ justifyContent: \"space-around\" }}\n              >\n                <Button variant=\"secondary\" onClick={deleteNode}>\n                  Delete Node\n                </Button>\n              </div>\n            </Toast.Body>\n          </Toast>\n          {/************************************************************************/}\n          {/************************************************************************/}\n          {/* NOTIFICATION */}\n          <Notification\n            title=\"Upload Topology\"\n            show={showTopologyNotification}\n            setShow={setShowTopologyNotification}\n            message={\n              <form onSubmit={onSubmit}>\n                <input type=\"file\" id=\"uploadfile\" onChange={onChange} />\n                <input\n                  type=\"submit\"\n                  value=\"Upload\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            }\n          />\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default TopoBuilder;\n","import { React, useState } from \"react\";\nimport Terminal, { LineType, ColorMode } from \"react-terminal-ui\";\n\n// const Terminal = ({ onClickCmd }) => {\n//   const commands = {\n//     whoami: \"A speck of dust in grand cosmos\",\n//     net: () => onClickCmd(`net run`),\n//     iperf: () => onClickCmd(`iperf`),\n//   };\n//   const theme = {\n//     themeBGColor: \"#272B36\",\n//     themeToolbarColor: \"#DBDBDB\",\n//     themeColor: \"#FFFEFC\",\n//     themePromptColor: \"#A917A8\",\n//   };\n//   return (\n//     <div\n//       style={{\n//         position: \"relative\",\n//         marginTop: \"5px\",\n//         overflowY: \"scroll\",\n//       }}\n//     >\n//       <ReactTerminal\n//         commands={commands}\n//         themes={{\n//           myCustomTheme: {\n//             themeBGColor: \"#272B36\",\n//             themeToolbarColor: \"#DBDBDB\",\n//             themeColor: \"#FFFEFC\",\n//             themePromptColor: \"#a917a8\",\n//           },\n//         }}\n//         theme=\"myCustomTheme\"\n//       />\n//     </div>\n//   );\n// };\n\nconst TerminalComp = ({ onClickCmd }) => {\n  const [lineData, setLineData] = useState([\n    {\n      type: LineType.Output,\n      value:\n        \"Write commands here!\\nTo see really long outputs toggle terminal off...\",\n    },\n    ,\n  ]);\n  const onInput = async (input) => {\n    let ld = [];\n    ld.push({ type: LineType.Input, value: input });\n    if (input.toLocaleLowerCase() === \"clear\") {\n      ld = [];\n    } else if (input) {\n      const output = await onClickCmd(input);\n      ld.push({ type: LineType.Output, value: output });\n    }\n    setLineData(ld);\n  };\n  return (\n    <div className=\"container\">\n      <Terminal\n        name=\"Terminal\"\n        colorMode={ColorMode.Dark}\n        lineData={lineData}\n        onInput={(terminalInput) => {\n          onInput(terminalInput);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TerminalComp;\n","import { React, useState, useEffect } from \"react\";\nimport TerminalComp from \"./Terminal\";\n\nimport axios from \"axios\";\nimport {\n  Container,\n  Button,\n  Row,\n  Col,\n  Form,\n  Modal,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport Terminal from \"./Terminal\";\nimport { GraphComponent } from \"./GraphComponent\";\n\nconst TopoViewer = ({ topoData, graphConfig, onClickLink }) => {\n  // changes <title> of the tab with respect to the page/components\n  useEffect(() => {\n    document.title = \"Topology Viewer\";\n  }, []);\n\n  const [count, setCount] = useState(0);\n  const [output, setOutput] = useState(\"Quick command output appears here...\");\n\n  /* TERMINAL RELATED METHODS AND STATES */\n\n  const [showTerminal, setShowTerminal] = useState(false);\n\n  const terminal = () => {\n    if (showTerminal) {\n      return <TerminalComp onClickCmd={onClickCmd} />;\n    } else {\n      return (\n        <Form style={{ marginTop: \"5px\", position: \"relative\" }}>\n          <Form.Control as=\"textarea\" rows={7} disabled value={output} />\n        </Form>\n      );\n    }\n  };\n\n  /* TABLE RELATED METHODS AND STATES */\n\n  const [structure, setStructure] = useState(\"\");\n  const handleClick = (structureName) => {\n    setShowTerminal(false);\n    setShowTable(true);\n    setStructure(structureName);\n  };\n  const [showTable, setShowTable] = useState(false);\n  const table = () => {\n    if (showTable) {\n      return (\n        <>\n          <Row className=\"pt-3\">\n            <Col style={{ border: \"3px solid white\" }}>\n              <strong>{structure} Entry</strong>\n            </Col>\n            <Col style={{ border: \"3px solid white\" }}>\n              <strong>{structure} Data</strong>\n            </Col>\n          </Row>\n          <Row>\n            <Col style={{ border: \"3px solid white\", height: \"150px\" }}>\n              /switch1/video1/v1\n            </Col>\n            <Col style={{ border: \"3px solid white\", height: \"150px\" }}>\n              Cached content at Node 1\n            </Col>\n          </Row>\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /* QUICK COMMANDS RELATED TO NODES */\n\n  const [nodeClicked, setNodeClicked] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  const onClickNode = (nodeID) => {\n    setNodeClicked(nodeID.toString());\n    console.log(nodeID);\n    setShowModal(true);\n  };\n\n  const onClickCmd = async (cmd) => {\n    let output_received = 0;\n    setTimeout((output_received) => {\n      if (output_received === 0) {\n        setShowLoading(false);\n        setOutput(\"No output received!\");\n        return \"No Output received!\";\n      }\n    }, 5000);\n    setShowModal(false);\n    setShowLoading(true);\n\n    let result = await axios.post(\"http://localhost:3001/command\", {\n      command: cmd,\n    });\n    output_received = 1;\n    await setOutput(result.data);\n    setShowLoading(false);\n    return result.data;\n  };\n\n  const modal = () => {\n    return (\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{nodeClicked}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Button\n              variant=\"primary\"\n              onClick={() => onClickCmd(`${nodeClicked} nfdc status report`)}\n            >\n              NFD Status\n            </Button>\n\n            <Button variant=\"primary\" onClick={() => onClickCmd(`net run`)}>\n              Network Status\n            </Button>\n\n            <Button\n              variant=\"primary\"\n              onClick={() => onClickCmd(`${nodeClicked} nlsrc status`)}\n            >\n              NLSR Status\n            </Button>\n          </Container>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              setShowModal(false);\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  // SHOW LOADING SCREEN\n\n  const [showLoading, setShowLoading] = useState(true);\n  const loadingOverlay = () => {\n    return (\n      <Modal\n        show={showLoading}\n        onHide={() => setShowLoading(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Body>Performing operation, please wait awhile...</Modal.Body>\n        <ProgressBar animated now={100} />\n        <Modal.Footer></Modal.Footer>\n      </Modal>\n    );\n  };\n\n  // if (ViewTopo) {\n  if (count === 0) {\n    setTimeout(() => {\n      setShowLoading(false);\n      setCount(1);\n    }, 30000);\n  }\n  return (\n    <Container style={{ minHeight: \"100vh\" }}>\n      {loadingOverlay()}\n      {modal()}\n      <h1 style={{ fontFamily: \"Roboto\" }}>Topology Viewer</h1>\n      <div\n        style={{\n          border: \"2px solid white\",\n          width: \"100%\",\n          height: \"51vh\",\n          backgroundColor: \"white\",\n        }}\n      >\n        <Row>\n          <Col>\n            <div\n              style={{\n                border: \"2px solid black\",\n                width: \"100%\",\n                height: \"50vh\",\n                backgroundColor: \"white\",\n              }}\n            >\n              <GraphComponent\n                topoData={topoData}\n                graphConfig={graphConfig}\n                onClickNode={onClickNode}\n                onClickLink={onClickLink}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n      <Container style={{ margin: \"10px 0px 10px 0px\" }}>\n        <Row\n          className=\"mt-1\"\n          class=\"text-center\"\n          style={{ justifyContent: \"center\", alignContent: \"center\" }}\n        >\n          <Col\n            className=\"border-right border-3 border-white\"\n            style={{ flexGrow: \"2\" }}\n          >\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowTerminal(!showTerminal);\n                setShowTable(false);\n              }}\n              block\n            >\n              Terminal\n            </Button>{\" \"}\n          </Col>\n\n          <Col\n            className=\"border-right border-3 border-white\"\n            style={{ flexGrow: \"2\" }}\n          >\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowLoading(true);\n                axios.get(\"http://localhost:3001/start\");\n                setTimeout(() => {\n                  setShowLoading(false);\n                }, 20000);\n              }}\n              block\n            >\n              Start NDN Stack\n            </Button>{\" \"}\n          </Col>\n\n          <Col style={{ flexGrow: \"2\" }}>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowLoading(true);\n                axios.get(\"http://localhost:3001/stop\");\n                setTimeout(() => {\n                  setShowLoading(false);\n                }, 2000);\n              }}\n              block\n            >\n              Stop NDN Stack\n            </Button>{\" \"}\n          </Col>\n        </Row>\n        {table()}\n      </Container>\n      {terminal()}\n    </Container>\n  );\n};\n\nexport default TopoViewer;\n","import { React, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/style.css\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nconst TitlePage = () => {\n  // changes <title> of the tab with respect to the page/components\n  useEffect(() => {\n    document.title = \"Itillah Portal\";\n  }, []);\n\n  return (\n    <div className=\"TitlePage\">\n      <div id=\"particles-js\"></div>\n      <div class=\"bg\">\n        <h4 data-testid=\"portal-name\">ITTILAH PORTAL</h4>\n      </div>\n      <Container>\n        <Row style={{ marginRight: \"15px\", borderRight: \"3px solid grey\" }}>\n          <Col>\n            <Link class=\"btn\" to=\"/login\" style={{ textDecoration: \"none\" }}>\n              Login\n            </Link>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Link class=\"btn\" to=\"/signup\" style={{ textDecoration: \"none\" }}>\n              Sign Up\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default TitlePage;\n","import axios from \"axios\";\nimport { React, useState, useEffect } from \"react\";\nimport { Container, Button, Row, Form, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = ({ setAuthorized }) => {\n  // changes <title> of the tab with respect to the page/components\n  useEffect(() => {\n    document.title = \"Sign Up\";\n  }, []);\n\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  const handleSignUp = async () => {\n    let format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n    let numbers = /^[A-Za-z][A-Za-z_0-9]/;\n    if (\n      user.username !== \"\" &&\n      user.username.length <= 10 &&\n      !format.test(user.username) &&\n      numbers.test(user.username)\n    ) {\n      console.log(user.username, user.password);\n      let newUser = { username: user.username, password: user.password };\n      // create a new json object and place it in the file\n      console.log(newUser);\n      // sending data to node js for adding in the user.json file\n      const result = await axios.post(\"http://localhost:3001/signup\", newUser);\n      console.log(result.status);\n      if (result.status !== 204) {\n        setAuthorized(true);\n        history.push(\"/build\");\n        alert(\"New User Added!\");\n      } else {\n        window.alert(\"Duplicate usernames are not allowed!\");\n      }\n    } else {\n      alert(\"Username or Password is not appropriate!\");\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      <Container>\n        <div style={{ border: \"2px solid black\", padding: \"5px\" }}>\n          <Row className=\"justify-content-center\">\n            <h1 style={{ fontFamily: \"Roboto\" }}>Sign Up</h1>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col xs=\"auto\">\n              <Form className=\"justify-content-center\">\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>New Username</Form.Label>\n                  <Form.Control\n                    value={user.username}\n                    onChange={(event) => {\n                      if (event.target.value.length <= 10) {\n                        setUser({\n                          username: event.target.value,\n                          password: user.password,\n                        });\n                      } else {\n                        window.alert(\n                          \"Username cannot be longer than 10 characters!\"\n                        );\n                      }\n                    }}\n                    data-testid=\"login-form-username\"\n                    type=\"text\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Never share your username or password with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>New Password</Form.Label>\n                  <Form.Control\n                    value={user.password}\n                    onChange={(event) => {\n                      if (event.target.value.length <= 10) {\n                        setUser({\n                          username: user.username,\n                          password: event.target.value,\n                        });\n                      } else {\n                        window.alert(\n                          \"Password cannot be longer than 10 characters!\"\n                        );\n                      }\n                    }}\n                    data-testid=\"login-form-password\"\n                    type=\"password\"\n                  />\n                </Form.Group>\n                <div className=\"text-center\">\n                  <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                      handleSignUp();\n                    }}\n                  >\n                    Sign Up\n                  </Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUp;\n","export default __webpack_public_path__ + \"static/media/router.ebf4888b.svg\";","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nconst ParticleComponent = () => (\n  <div\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n    }}\n  >\n    <Particles\n      params={{\n        particles: {\n          number: {\n            value: 50,\n            density: {\n              enable: true,\n              value_area: 1000,\n            },\n          },\n          color: {\n            value: \"#ffffff\",\n          },\n          shape: {\n            type: \"circle\",\n            stroke: {\n              width: 1,\n              color: \"#03bcf4\",\n            },\n            polygon: {\n              nb_sides: 4,\n            },\n            image: {\n              src: \"img/github.svg\",\n              width: 100,\n              height: 100,\n            },\n          },\n          opacity: {\n            value: 1,\n            random: false,\n            anim: {\n              enable: false,\n              speed: 1,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n          size: {\n            value: 3,\n            random: true,\n            anim: {\n              enable: false,\n              speed: 40,\n              size_min: 0.1,\n              sync: false,\n            },\n          },\n          line_linked: {\n            enable: true,\n            distance: 150,\n            color: \"#ffffff\",\n            opacity: 0.4,\n            width: 0.5,\n          },\n          move: {\n            enable: true,\n            speed: 2,\n            direction: \"none\",\n            random: false,\n            straight: false,\n            out_mode: \"out\",\n            bounce: false,\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detect_on: \"window\",\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"attract\",\n            },\n            onclick: {\n              enable: false,\n              mode: \"push\",\n            },\n            resize: true,\n          },\n          modes: {\n            grab: {\n              distance: 400,\n              line_linked: {\n                opacity: 1,\n              },\n            },\n            bubble: {\n              distance: 400,\n              size: 40,\n              duration: 2,\n              opacity: 8,\n              speed: 3,\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n            },\n            push: {\n              particles_nb: 4,\n            },\n            remove: {\n              particles_nb: 2,\n            },\n          },\n        },\n        retina_detect: true,\n        config_demo: {\n          background_color: \"#000\",\n        },\n      }}\n    />\n  </div>\n);\n\nexport default ParticleComponent;\n","import React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport TopoBuilder from \"./TopoBuilder\";\nimport TopoViewer from \"./TopoViewer\";\nimport axios from \"axios\";\nimport TitlePage from \"./TitlePage\";\nimport SignUp from \"./SignUp\";\nimport Router from \"../icons/router.svg\";\n\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport ParticleComponent from \"./ParticleComponent\";\n\nfunction App() {\n  // TOPOLOGY CONFIGURATION\n  const [data, setData] = useState({\n    nodes: [\n      { id: \"node1\", x: 150, y: 150 },\n      { id: \"node2\", x: 200, y: 200 },\n    ],\n    links: [{ source: \"node1\", target: \"node2\" }],\n  });\n\n  // GRAPH MODULE CONFIGURATION\n  // changed 'size' property and changed node from circle to 'router.svg'\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    width: window.innerWidth,\n    node: {\n      color: `lightgreen`,\n      size: 700,\n      fontSize: 12,\n      highlightFontSize: 15,\n      highlightStrokeColor: `blue`,\n      svg: Router,\n    },\n    link: {\n      highlightColor: `lightblue`,\n      color: `blue`,\n    },\n  };\n\n  // LOGIN STATES AND FUNCTIONS\n\n  const [authorized, setAuthorized] = useState(false);\n\n  const createTopology = (history) => {\n    axios\n      .post(\"http://localhost:3001/topology\", data)\n      .then(() => {\n        console.log(\"Data send to backend\");\n        history.push(\"/view\");\n      })\n      .catch((error) => {\n        window.alert(error);\n      });\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#000\",\n        color: \"white\",\n        // backgroundImage: \"linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%)\",\n        overflowY: \"scroll\",\n      }}\n    >\n      <ParticleComponent />\n\n      {/* ROUTE HANDLING */}\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/view\">\n            {authorized ? (\n              <TopoViewer topoData={data} graphConfig={myConfig}></TopoViewer>\n            ) : (\n              <Redirect to=\"/login\"></Redirect>\n            )}\n            ;\n          </Route>\n          <Route path=\"/build\">\n            {authorized ? (\n              <TopoBuilder\n                topoData={data}\n                setTopoData={setData}\n                createTopology={createTopology}\n                graphConfig={myConfig}\n              ></TopoBuilder>\n            ) : (\n              <Redirect to=\"/login\"></Redirect>\n            )}\n          </Route>\n          <Route path=\"/login\">\n            <Login setAuthorized={setAuthorized}></Login>\n          </Route>\n          {/* SIGN UP NEW USER */}\n          <Route path=\"/signup\">\n            <SignUp setAuthorized={setAuthorized} />\n          </Route>\n\n          <Route path=\"/\">\n            <TitlePage></TitlePage>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}