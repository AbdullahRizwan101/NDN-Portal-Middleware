{"version":3,"sources":["components/Login.js","components/TopoBuilder.js","components/TopoViewer.js","components/TitlePage.js","components/ParticleComponent.js","components/App.js","index.js"],"names":["Login","loginInput","setLoginInput","handleLogin","viewBuilder","ViewTopo","SetViewBuilder","ViewLogin","style","display","alignItems","width","height","Container","border","padding","Row","className","fontFamily","Col","xs","Form","Group","controlId","Label","Control","data-testid","type","placeholder","value","username","onChange","event","target","password","Text","Button","variant","onClick","TopoBuilder","data","addNode","addLink","linkInput","setLinkInput","createTopology","myConfig","onClickLink","onClickNode","useState","makeTopo","setMakeTopo","showAlert","setShowAlert","Alert","onClose","dismissible","transition","paddingTop","block","InputGroup","FormControl","aria-label","aria-describedby","sourceInput","destinationInput","backgroundColor","id","config","TopoViewer","count","setCount","output","setOutput","showTerminal","setShowTerminal","commands","whoami","net","onClickCmd","iperf","structure","showTable","setShowTable","nodeClicked","setNodeClicked","showModal","setShowModal","cmd","a","setShowLoading","axios","post","command","result","showLoading","setTimeout","Modal","show","onHide","backdrop","keyboard","Body","ProgressBar","animated","now","Footer","Header","closeButton","Title","justifyContent","nodeID","toString","class","get","position","marginTop","as","rows","disabled","TitlePage","ViewTitlePage","ViewLoginForm","ParticleComponent","top","left","params","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","image","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","background_color","App","nodes","links","source","setData","setViewTopo","setViewTitlePage","setViewLogin","nodeHighlightBehavior","node","highlightStrokeColor","link","highlightColor","nodeId","console","log","window","alert","length","nodesNum","setNodesNum","x","y","nodeCordinates","setNodeCordinates","setViewBuilder","overflow","then","response","status","Error","catch","error","concat","var1","find","var2","var3","string","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcbaf89a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Button, Alert, Row, Form, Col } from \"react-bootstrap\";\n\nconst Login = ({\n  loginInput,\n  setLoginInput,\n  handleLogin,\n  viewBuilder,\n  SetViewBuilder,\n  ViewTopo,\n  ViewLogin,\n}) => {\n  if (viewBuilder === false && ViewTopo === false && ViewLogin === true) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100vh\",\n          // backgroundColor: \"#85FFBD\",\n          // backgroundImage: \"linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%)\",\n          // background: \"#36D1DC\" /* fallback for old browsers */,\n          // background:\n          //   \"-webkit-linear-gradient(to right, #5B86E5, #36D1DC)\" /* Chrome 10-25, Safari 5.1-6 */,\n          // background:\n          //   \"linear-gradient(to right, #5B86E5, #36D1DC)\" /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */,\n        }}\n      >\n        <Container>\n          {/* <h1 className=\"text-center\" style={{ fontFamily: \"Roboto\" }}>\n            NAME DATA NETWORKING(NDN) PORTAL\n          </h1> */}\n          <div style={{ border: \"2px solid black\", padding: \"5px\" }}>\n            <Row className=\"justify-content-center\">\n              <h1 style={{ fontFamily: \"Roboto\" }}>Login</h1>\n            </Row>\n            <Row className=\"justify-content-center\">\n              <Col xs=\"auto\">\n                <Form className=\"justify-content-center\">\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      data-testid=\"login-form-username\"\n                      type=\"text\"\n                      placeholder=\"Enter Username\"\n                      value={loginInput.username}\n                      onChange={(event) => {\n                        setLoginInput({\n                          username: event.target.value,\n                          password: loginInput.password,\n                        });\n                      }}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      Never share your username or password with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      data-testid=\"login-form-password\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      value={loginInput.password}\n                      onChange={(event) => {\n                        setLoginInput({\n                          username: loginInput.username,\n                          password: event.target.value,\n                        });\n                      }}\n                    />\n                  </Form.Group>\n                  <div className=\"text-center\">\n                    <Button\n                      variant=\"primary\"\n                      onClick={() => {\n                        handleLogin();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </Form>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport {\n  Container,\n  Button,\n  Alert,\n  Row,\n  Col,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\n\nconst TopoBuilder = ({\n  data,\n  addNode,\n  addLink,\n  linkInput,\n  setLinkInput,\n  createTopology,\n  myConfig,\n  onClickLink,\n  onClickNode,\n  ViewTopo,\n  viewBuilder,\n  username,\n}) => {\n  const [makeTopo, setMakeTopo] = useState(false);\n  const [showAlert, setShowAlert] = useState(true);\n\n  const alertMessage = () => {\n    if (showAlert) {\n      return (\n        <Alert\n          variant=\"success\"\n          onClose={() => setShowAlert(false)}\n          dismissible\n          transition\n        >\n          Welcome back {username}!\n        </Alert>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  if (viewBuilder === true) {\n    return (\n      <Container>\n        {alertMessage()}\n        <h1 style={{ fontFamily: \"Roboto\", paddingTop: \"20px\" }}>TOPOLOGY</h1>\n        <Row style={makeTopo ? {} : { height: \"85vh\" }}>\n          <Col>\n            <Button\n              variant=\"secondary\"\n              block\n              onClick={() => setMakeTopo(true)}\n              data-testid=\"create-topology-button\"\n            >\n              Create Topology\n            </Button>{\" \"}\n          </Col>\n          <Col>\n            <Button\n              variant=\"secondary\"\n              block\n              onClick={createTopology}\n              data-testid=\"view-topology-button\"\n            >\n              View Topology\n            </Button>{\" \"}\n          </Col>\n        </Row>\n        <br></br>\n        <Row className={makeTopo ? \"\" : \"d-none\"}>\n          <Col className=\"justify-content-right\">\n            <br></br>\n            <br></br>\n            <br></br>\n            <Button variant=\"secondary\" onClick={addNode} block>\n              Add Node\n            </Button>{\" \"}\n            <br></br>\n            {/* <input\n            type=\"text\"\n            value={linkInput.sourceInput}\n            placeholder=\"Source Node\"\n            onChange={(event) => {\n              setLinkInput({\n                sourceInput: event.target.value,\n                destinationInput: linkInput.destinationInput,\n              });\n            }}\n          />\n          <br></br>\n          <input\n            type=\"text\"\n            value={linkInput.destinationInput}\n            placeholder=\"Destination Node\"\n            onChange={(event) => {\n              setLinkInput({\n                destinationInput: event.target.value,\n                sourceInput: linkInput.sourceInput,\n              });\n            }}\n          />\n          <br></br> */}\n            <InputGroup className=\"\">\n              <FormControl\n                aria-label=\"Source Node\"\n                aria-describedby=\"basic-addon1\"\n                value={linkInput.sourceInput}\n                placeholder=\"Source Node\"\n                onChange={(event) => {\n                  setLinkInput({\n                    sourceInput: event.target.value,\n                    destinationInput: linkInput.destinationInput,\n                  });\n                }}\n              />\n            </InputGroup>\n            <InputGroup className=\"mb-1\">\n              <FormControl\n                aria-label=\"Destination Node\"\n                aria-describedby=\"basic-addon1\"\n                value={linkInput.destinationInput}\n                placeholder=\"Destination Node\"\n                onChange={(event) => {\n                  setLinkInput({\n                    destinationInput: event.target.value,\n                    sourceInput: linkInput.sourceInput,\n                  });\n                }}\n              />\n            </InputGroup>\n            <Button variant=\"secondary\" onClick={addLink} block>\n              Add Link\n            </Button>{\" \"}\n            <br></br>\n            <br></br>\n            <br></br>\n            <Button variant=\"secondary\" onClick={createTopology} block>\n              Submit\n            </Button>{\" \"}\n            {/* <Button variant=\"secondary\" block>\n              Delete\n            </Button>\n            <Button variant=\"secondary\" block>\n              Go Back\n            </Button>{\" \"} */}\n          </Col>\n          <Col>\n            <div\n              style={{\n                border: \"2px solid black\",\n                width: \"100%\",\n                height: \"80vh\",\n                backgroundColor: \"white\",\n              }}\n            >\n              <Graph\n                id=\"graph-id\" // id is mandatory\n                data={data}\n                config={myConfig}\n                onClickNode={onClickNode}\n                onClickLink={onClickLink}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TopoBuilder;\n","import { React, useState } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Button,\n  Row,\n  Col,\n  Form,\n  Modal,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport { ReactTerminal } from \"react-terminal\";\n\nconst TopoViewer = ({ data, myConfig, onClickLink, ViewTopo }) => {\n  const [count, setCount] = useState(0);\n  const [output, setOutput] = useState(\"\");\n\n  /* TERMINAL RELATED METHODS AND STATES */\n\n  const [showTerminal, setShowTerminal] = useState(false);\n  const commands = {\n    whoami: \"A speck of dust in grand cosmos\",\n    net: () => onClickCmd(`net run`),\n    iperf: () => onClickCmd(`iperf`),\n  };\n  const terminal = () => {\n    if (showTerminal) {\n      return (\n        <div style={{ position: \"relative\", marginTop: \"5px\" }}>\n          <ReactTerminal commands={commands} />\n        </div>\n      );\n    } else {\n      return (\n        <Form style={{ marginTop: \"5px\", position: \"relative\" }}>\n          <Form.Control as=\"textarea\" rows={7} disabled value={output} />\n        </Form>\n      );\n    }\n  };\n\n  /* TABLE RELATED METHODS AND STATES */\n\n  const [structure, setStructure] = useState(\"\");\n  const handleClick = (structureName) => {\n    setShowTerminal(false);\n    setShowTable(true);\n    setStructure(structureName);\n  };\n  const [showTable, setShowTable] = useState(false);\n  const table = () => {\n    if (showTable) {\n      return (\n        <>\n          <Row className=\"pt-3\">\n            <Col style={{ border: \"3px solid white\" }}>\n              <strong>{structure} Entry</strong>\n            </Col>\n            <Col style={{ border: \"3px solid white\" }}>\n              <strong>{structure} Data</strong>\n            </Col>\n          </Row>\n          <Row>\n            <Col style={{ border: \"3px solid white\", height: \"150px\" }}>\n              /switch1/video1/v1\n            </Col>\n            <Col style={{ border: \"3px solid white\", height: \"150px\" }}>\n              Cached content at Node 1\n            </Col>\n          </Row>\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /* QUICK COMMANDS RELATED TO NODES */\n\n  const [nodeClicked, setNodeClicked] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  const onClickNode = (nodeID) => {\n    setNodeClicked(nodeID.toString());\n    setShowModal(true);\n  };\n\n  const onClickCmd = async (cmd) => {\n    setShowModal(false);\n    setShowLoading(true);\n    let result = await axios.post(\"http://localhost:3001/command\", {\n      command: cmd,\n    });\n    await setOutput(result.data);\n    setShowLoading(false);\n    return result.data;\n  };\n\n  const modal = () => {\n    return (\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{nodeClicked}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <Button\n              variant=\"primary\"\n              onClick={() => onClickCmd(`${nodeClicked} nfdc status report`)}\n            >\n              NFD Status\n            </Button>\n\n            <Button variant=\"primary\" onClick={() => onClickCmd(`net run`)}>\n              Network Status\n            </Button>\n\n            <Button\n              variant=\"primary\"\n              onClick={() => onClickCmd(`${nodeClicked} nlsrc status`)}\n            >\n              NLSR Status\n            </Button>\n          </Container>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              setShowModal(false);\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  // SHOW LOADING SCREEN\n\n  const [showLoading, setShowLoading] = useState(true);\n  const loadingOverlay = () => {\n    return (\n      <Modal\n        show={showLoading}\n        onHide={() => setShowLoading(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Body>Performing operation, please wait awhile...</Modal.Body>\n        <ProgressBar animated now={50} />\n        <Modal.Footer></Modal.Footer>\n      </Modal>\n    );\n  };\n\n  if (ViewTopo) {\n    if (count === 0) {\n      setTimeout(() => {\n        setShowLoading(false);\n        setCount(1);\n      }, 20000);\n    }\n    return (\n      <Container style={{ height: \"100vh\" }}>\n        {loadingOverlay()}\n        {modal()}\n        <h1 style={{ fontFamily: \"Roboto\" }}>Topology Viewer</h1>\n        <div\n          style={{\n            border: \"2px solid white\",\n            width: \"100%\",\n            height: \"51vh\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <Row>\n            <Col>\n              <div\n                style={{\n                  border: \"2px solid black\",\n                  width: \"100%\",\n                  height: \"50vh\",\n                  backgroundColor: \"white\",\n                }}\n              >\n                <Graph\n                  id=\"graph-id\" // id is mandatory\n                  data={data}\n                  config={myConfig}\n                  onClickNode={onClickNode}\n                  onClickLink={onClickLink}\n                />\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <Container>\n          <Row className=\"mt-1\" class=\"text-center\">\n            <Col>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  setShowTerminal(!showTerminal);\n                  setShowTable(false);\n                }}\n                block\n              >\n                Terminal\n              </Button>{\" \"}\n            </Col>\n            <Col>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  setShowLoading(true);\n                  axios.get(\"http://localhost:3001/start\");\n                  setTimeout(() => {\n                    setShowLoading(false);\n                  }, 20000);\n                }}\n                block\n              >\n                Start NDN Stack\n              </Button>{\" \"}\n            </Col>\n            <Col>\n              <Button\n                variant=\"secondary\"\n                onClick={() => {\n                  setShowLoading(true);\n                  axios.get(\"http://localhost:3001/stop\");\n                  setTimeout(() => {\n                    setShowLoading(false);\n                  }, 2000);\n                }}\n                block\n              >\n                Stop NDN Stack\n              </Button>{\" \"}\n            </Col>\n          </Row>\n          {table()}\n        </Container>\n        {terminal()}\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TopoViewer;\n","import React from \"react\";\nimport \"../styles/style.css\";\n\nconst TitlePage = ({ ViewTitlePage, ViewLoginForm }) => {\n  if (ViewTitlePage) {\n    return (\n      <div className=\"TitlePage\">\n        <div id=\"particles-js\"></div>\n        <div class=\"bg\">\n          <h4 data-testid=\"portal-name\">ITTILAH PORTAL</h4>\n        </div>\n        <div class=\"container\">\n          <button\n            class=\"btn\"\n            onClick={() => {\n              ViewLoginForm();\n            }}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TitlePage;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nconst ParticleComponent = () => (\n  <div\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n    }}\n  >\n    <Particles\n      params={{\n        particles: {\n          number: {\n            value: 50,\n            density: {\n              enable: true,\n              value_area: 1000,\n            },\n          },\n          color: {\n            value: \"#ffffff\",\n          },\n          shape: {\n            type: \"circle\",\n            stroke: {\n              width: 1,\n              color: \"#03bcf4\",\n            },\n            polygon: {\n              nb_sides: 4,\n            },\n            image: {\n              src: \"img/github.svg\",\n              width: 100,\n              height: 100,\n            },\n          },\n          opacity: {\n            value: 1,\n            random: false,\n            anim: {\n              enable: false,\n              speed: 1,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n          size: {\n            value: 3,\n            random: true,\n            anim: {\n              enable: false,\n              speed: 40,\n              size_min: 0.1,\n              sync: false,\n            },\n          },\n          line_linked: {\n            enable: true,\n            distance: 150,\n            color: \"#ffffff\",\n            opacity: 0.4,\n            width: 0.5,\n          },\n          move: {\n            enable: true,\n            speed: 2,\n            direction: \"none\",\n            random: false,\n            straight: false,\n            out_mode: \"out\",\n            bounce: false,\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detect_on: \"window\",\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"attract\",\n            },\n            onclick: {\n              enable: false,\n              mode: \"push\",\n            },\n            resize: true,\n          },\n          modes: {\n            grab: {\n              distance: 400,\n              line_linked: {\n                opacity: 1,\n              },\n            },\n            bubble: {\n              distance: 400,\n              size: 40,\n              duration: 2,\n              opacity: 8,\n              speed: 3,\n            },\n            repulse: {\n              distance: 100,\n              duration: 0.4,\n            },\n            push: {\n              particles_nb: 4,\n            },\n            remove: {\n              particles_nb: 2,\n            },\n          },\n        },\n        retina_detect: true,\n        config_demo: {\n          background_color: \"#000\",\n        },\n      }}\n    />\n  </div>\n);\n\nexport default ParticleComponent;\n","import React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport TopoBuilder from \"./TopoBuilder\";\nimport TopoViewer from \"./TopoViewer\";\nimport axios from \"axios\";\nimport TitlePage from \"./TitlePage\";\nimport ParticleComponent from \"./ParticleComponent\";\nimport { Popover } from \"react-bootstrap\";\n\nfunction App() {\n  const [data, setData] = useState({\n    nodes: [{ id: \"node0\" }, { id: \"node1\" }],\n    links: [{ source: \"node0\", target: \"node1\" }],\n  });\n\n  const [ViewTopo, setViewTopo] = useState(false);\n  const [ViewTitlePage, setViewTitlePage] = useState(true);\n  const [ViewLogin, setViewLogin] = useState(false);\n  const ViewLoginForm = () => {\n    setViewTitlePage(false);\n    setViewLogin(true);\n  };\n\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    node: {\n      color: \"#42F3FB\",\n      size: 120,\n      highlightStrokeColor: \"blue\",\n    },\n    link: {\n      highlightColor: \"lightblue\",\n    },\n  };\n\n  const onClickNode = function (nodeId) {\n    console.log(nodeId);\n  };\n\n  const onClickLink = function (source, target) {\n    window.alert(`Clicked link between ${source} and ${target}`);\n  };\n\n  const [nodesNum, setNodesNum] = useState(data.nodes.length);\n  const [linkInput, setLinkInput] = useState({\n    sourceInput: \"\",\n    destinationInput: \"\",\n  });\n\n  const [loginInput, setLoginInput] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [nodeCordinates, setNodeCordinates] = useState({ x: 20, y: 20 });\n  const addNode = () => {\n    setNodesNum(nodesNum + 1);\n    const nodes = data.nodes.concat({\n      id: `node${nodesNum}`,\n      x: nodeCordinates.x,\n      y: nodeCordinates.y,\n    });\n    setData({ nodes: nodes, links: data.links });\n    setNodeCordinates({ x: nodeCordinates.x + 5, y: nodeCordinates.y + 10 });\n  };\n\n  const addLink = () => {\n    const var1 = data.nodes.find((node) => node.id === linkInput.sourceInput);\n    const var2 = data.nodes.find(\n      (node) => node.id === linkInput.destinationInput\n    );\n    const var3 = data.links.find(\n      (link) =>\n        link.source === linkInput.sourceInput &&\n        link.target === linkInput.destinationInput\n    );\n    if (var1 && var2) {\n      if (var3) {\n        window.alert(\"Link already exist!\");\n      } else {\n        const links = data.links.concat({\n          source: linkInput.sourceInput,\n          target: linkInput.destinationInput,\n        });\n        setData({ nodes: data.nodes, links: links });\n      }\n    } else {\n      const string = var1 ? \"Second\" : \"First\";\n      window.alert(`${string} node does not exist`);\n    }\n  };\n  const handleLogin = () => {\n    axios\n      .post(\"http://localhost:3001/persons\", loginInput)\n      .then((response) => {\n        if (response.status === 200) {\n          setViewBuilder(true);\n        } else if (response.status === 204) {\n          throw Error(\"User name or Password incorrect!\");\n        }\n      })\n      .catch((error) => {\n        window.alert(error);\n      });\n  };\n\n  const createTopology = () => {\n    axios\n      .post(\"http://localhost:3001/topology\", data)\n      .then(() => {\n        console.log(\"Data send to backend\");\n        setViewBuilder(false);\n        setViewTopo(true);\n      })\n      .catch((error) => {\n        window.alert(error);\n      });\n  };\n\n  const [viewBuilder, setViewBuilder] = useState(false);\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#000\",\n        color: \"white\",\n        // backgroundImage: \"linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%)\",\n        overflow: \"hidden\",\n      }}\n    >\n      <ParticleComponent />\n      <TitlePage\n        ViewTitlePage={ViewTitlePage}\n        ViewLoginForm={ViewLoginForm}\n      ></TitlePage>\n\n      <Login\n        loginInput={loginInput}\n        setLoginInput={setLoginInput}\n        handleLogin={handleLogin}\n        viewBuilder={viewBuilder}\n        setViewBuilder={setViewBuilder}\n        ViewTopo={ViewTopo}\n        ViewLogin={ViewLogin}\n      ></Login>\n      <TopoBuilder\n        data={data}\n        addNode={addNode}\n        addLink={addLink}\n        linkInput={linkInput}\n        setLinkInput={setLinkInput}\n        createTopology={createTopology}\n        myConfig={myConfig}\n        onClickLink={onClickLink}\n        onClickNode={onClickNode}\n        ViewTopo={ViewTopo}\n        viewBuilder={viewBuilder}\n        username={loginInput.username}\n      ></TopoBuilder>\n      <TopoViewer\n        data={data}\n        myConfig={myConfig}\n        onClickLink={onClickLink}\n        onClickNode={onClickNode}\n        ViewTopo={ViewTopo}\n      ></TopoViewer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { TerminalContextProvider } from \"react-terminal\";\n\nReactDOM.render(\n  <TerminalContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </TerminalContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}